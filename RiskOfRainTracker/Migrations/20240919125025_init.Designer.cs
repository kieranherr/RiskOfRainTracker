// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RiskOfRainTracker.Data;

#nullable disable

namespace RiskOfRainTracker.Migrations
{
    [DbContext(typeof(RiskOfRainTrackerContext))]
    [Migration("20240919125025_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RiskOfRainTracker.Models.RunAttributes", b =>
                {
                    b.Property<int>("RunId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RunId"));

                    b.Property<bool?>("AlternateEnding")
                        .HasColumnType("bit");

                    b.Property<int>("AlternateEndingId")
                        .HasColumnType("int");

                    b.Property<bool?>("BeatAlternateEnding")
                        .HasColumnType("bit");

                    b.Property<bool?>("BeatMitrhrix")
                        .HasColumnType("bit");

                    b.Property<string>("DLCIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DLCRun")
                        .HasColumnType("bit");

                    b.Property<bool>("FoughtMithrix")
                        .HasColumnType("bit");

                    b.Property<string>("ModProfileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ModdedRun")
                        .HasColumnType("bit");

                    b.Property<DateTime>("RunDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RunLengthHours")
                        .HasColumnType("int");

                    b.Property<int>("RunLengthMinutes")
                        .HasColumnType("int");

                    b.Property<int>("RunLevelEnd")
                        .HasColumnType("int");

                    b.Property<string>("RunParticipantIds")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RunUDifficultyId")
                        .HasColumnType("int");

                    b.Property<string>("UArtifactIds")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RunId");

                    b.ToTable("RunAttributes");
                });
#pragma warning restore 612, 618
        }
    }
}
